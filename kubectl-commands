kubectl get nodes              -> to check nodes of kubenetes
kubectl get nodes -o wide      -> to get flavor and version of Operating System on which the Kubernetes nodes are running
kubectl run nginx --image nginx -> creates a pod automatically and deploy an instance of the nginx docker image as container.
kubectl get pods               -> to list the pods available in our cluster.
kubectl describe pod nginx     -> provides additional info about the pod and container, image inside the pod.
kubectl create -f pod.config.yml -> to create yaml kubernetes yaml configuration file.
or
kubectl apply -f pod.yaml
kubectl edit pod image_name     -> to edit the image name inside the pod.

---REPLICASET ---

kubectl create -f replicaset-def.yaml  -> to create a replica set file.
kubectl get replicaset         -> to see the list of replicasets created
kubectl describe replicaset name-of-replicaset  -> to view more info about replicaset
kubectl delete replicaset replicaset-name   ->  to delete the replicaset and deletes all underlying pods.
kubectl replace -f replicaset-def.yaml   -> to replace or update the replicaset.
kubectl scale --replicas=6 -f replicaset-def.yaml  -> to scale the replicas simply from the command line.
kubectl delete pod pod-name    -> deleted the pod under replicaset.
kubectl edit replicaset name-of-replicaset  ->  to edit the yaml config file of replicaset.

--- Deployment ---

kubectl create -f deployment-def.yaml   -> creates deployment object and above that creates replicaset and pods inside that.
kubectl create -f deployment-def.yaml --record   -> record option instructs the kubernetes the cause of change.
kubectl get deployments       ->  shows all the deployment objects
kubectl get all               ->  shows deployments, replicasets, and pods
kubectl rollout status deployment/name-of-deploy  ->  shows the status of the rollout deployment
kubectl rollout history deployment/name-of-deploy ->  show the history & revisions of our deployment.
kubectl edit deployment name-of-deploy --record   ->  to edit the yaml file and records wt edited.
kubectl apply -f deployment-definition.yaml       ->  to apply the changes made in file and starts rolling update.
kubectl rollout undo deployment/name-of-deploy    ->  to rollback changes to the preveous deployment.

--- service ---

kubectl create -f service-definition.yaml   -> to create a yaml file which helps the requests of user goes through the ports.
kubectl service servive-name --url       -> gives the url of the application running on the node.
kubectl describe service                 -> more info about service like ports, endpoints.
kubectl apply -f service-definition.yaml -> to apply the changes after editing the file.
minikube service list          ->  lists all services.

--- ETCD ---

etcdctl --version              -> checks teh version of etcd
./etcdctl put key1 value1      -> updated the new value in the ectd store
./ectdctl get key1             -> extracts the value of the given key
kubectl get pods -n kube-system    -> to view the ectd which is configured as a pod by kubeadm
kubectl exec etcd-master -n kube-system   --> to enter in to the etcd pod
etcdctl get / --prefix -keys-only    ->  to list the keys that kubernetes stored.

--- Kube API-server ---

kube-apiserver.service            -> opens the file of kube API server options of cert files, urls, connectivities and many other options.
kubectl get pods -n kube-system   -> to view kube API server service deployed as pod in master  node.
cat /etc/kubernetes/manifests/kube-apiserver.yaml     -> in kubeadm setup, to see kube api server options from inside the pod in master node.
cat /etc/systemd/system/kube-apiserver.service        -> in non kubeadm service, to see kube API server options.
ps -aux | grep kube-apiserver          -> to search the processes running on master node with kube-api server.

--- kube controller manager ---

kube-controller-manager.service          -> to see all controllers and options after installation without kubeadm tool.
kubectl get pods -n kube-system         -> to view controller pod which runs on master node.
cat /etc/kubernetes/manifests/kube-controller-manager.yaml  ->   to see kube controller options in kubeadm env.
cat /etc/systemd/system/kube-controller-manager.service     ->  to view options in non kubeadm setup.
ps aux | grep kube-controller-manager    ->   to see running processes that are searching for kube controller.














